Index: src/test/java/Project/OpenBook/Controller/ChoiceControllerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Project.OpenBook.Controller;\r\n\r\nimport Project.OpenBook.Domain.Category;\r\nimport Project.OpenBook.Domain.Chapter;\r\nimport Project.OpenBook.Domain.Choice;\r\nimport Project.OpenBook.Domain.Topic;\r\nimport Project.OpenBook.Dto.*;\r\nimport Project.OpenBook.Repository.CategoryRepository;\r\nimport Project.OpenBook.Repository.ChapterRepository;\r\nimport Project.OpenBook.Repository.topic.TopicRepository;\r\nimport Project.OpenBook.Repository.choice.ChoiceRepository;\r\nimport org.junit.jupiter.api.*;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.boot.test.context.SpringBootTest;\r\nimport org.springframework.boot.test.web.client.TestRestTemplate;\r\nimport org.springframework.boot.test.web.server.LocalServerPort;\r\nimport org.springframework.core.ParameterizedTypeReference;\r\nimport org.springframework.http.HttpEntity;\r\nimport org.springframework.http.HttpMethod;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.http.client.HttpComponentsClientHttpRequestFactory;\r\nimport org.springframework.test.context.TestPropertySource;\r\n\r\nimport java.util.*;\r\nimport java.util.stream.Collectors;\r\n\r\nimport static org.assertj.core.api.AssertionsForClassTypes.assertThat;\r\n\r\n\r\n@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\r\n@TestPropertySource(properties = { \"spring.config.location=classpath:application-test.yml\" })\r\n@TestInstance(TestInstance.Lifecycle.PER_CLASS)\r\nclass ChoiceControllerTest {\r\n\r\n    @LocalServerPort\r\n    int port;\r\n\r\n    @Autowired\r\n    TestRestTemplate restTemplate;\r\n\r\n    @Autowired\r\n    ChapterRepository chapterRepository;\r\n\r\n    @Autowired\r\n    CategoryRepository categoryRepository;\r\n\r\n    @Autowired\r\n    TopicRepository topicRepository;\r\n\r\n    @Autowired\r\n    ChoiceRepository choiceRepository;\r\n\r\n    private final String prefix = \"http://localhost:\";\r\n    //private final String surfix = \"/admin/login\";\r\n\r\n    String URL;\r\n\r\n    Topic topic1, topic2;\r\n\r\n    Choice choice1, choice2, choice3, choice4, choice5;\r\n\r\n    @BeforeAll\r\n    public void initTestForChoiceController() {\r\n        URL = prefix + port;\r\n        restTemplate = restTemplate.withBasicAuth(\"admin1\", \"admin1\");\r\n        restTemplate.getRestTemplate().setRequestFactory(new HttpComponentsClientHttpRequestFactory());\r\n        initEntity();\r\n    }\r\n\r\n    private void initEntity(){\r\n        Chapter chapter = new Chapter(\"1단원\", 1);\r\n        Category category = new Category(\"사건\");\r\n        chapterRepository.save(chapter);\r\n        categoryRepository.save(category);\r\n\r\n        topic1 = new Topic(\"topic1\", null, null, 0, 0, \"detail1\", chapter, category);\r\n        topic2 = new Topic(\"topic2\", null, null, 0, 0, \"detail2\", chapter, category);\r\n\r\n        topicRepository.save(topic1);\r\n        topicRepository.save(topic2);\r\n    }\r\n\r\n    /**\r\n     * choice1,2,3 -> topic1\r\n     * choice4,5 -> topic2\r\n     */\r\n    @BeforeEach\r\n    public void resetChoice(){\r\n        choiceRepository.deleteAllInBatch();\r\n\r\n        choice1 = new Choice(\"choice1\", topic1);\r\n        choice2 = new Choice(\"choice2\", topic1);\r\n        choice3 = new Choice(\"choice3\", topic1);\r\n\r\n        choice4 = new Choice(\"choice4\", topic2);\r\n        choice5 = new Choice(\"choice5\", topic2);\r\n\r\n        choiceRepository.save(choice1);\r\n        choiceRepository.save(choice2);\r\n        choiceRepository.save(choice3);\r\n        choiceRepository.save(choice4);\r\n        choiceRepository.save(choice5);\r\n    }\r\n\r\n    @DisplayName(\"특정 topic의 모든 선지를 보여주기 성공 - GET /admin/topics/{topicTitle}/choices/\")\r\n    @Test\r\n    public void getChoicesInTopicsSuccess() {\r\n        String topicTitle = \"topic1\";\r\n        ResponseEntity<List<ChoiceDto>> response = restTemplate.exchange(URL + \"/admin/topics/{topicTitle}/choices/\", HttpMethod.GET, null, new ParameterizedTypeReference<List<ChoiceDto>>() {}, topicTitle);\r\n        assertThat(response.getStatusCode()).isEqualTo(HttpStatus.OK);\r\n        List<ChoiceDto> body = response.getBody();\r\n        Set<String> contentSet = body.stream().map(c -> c.getContent()).collect(Collectors.toSet());\r\n\r\n        assertThat(contentSet.size()).isEqualTo(3);\r\n        assertThat(contentSet.contains(\"choice1\")).isTrue();\r\n        assertThat(contentSet.contains(\"choice2\")).isTrue();\r\n        assertThat(contentSet.contains(\"choice3\")).isTrue();\r\n        assertThat(contentSet.contains(\"choice4\")).isFalse();\r\n        assertThat(contentSet.contains(\"choice5\")).isFalse();\r\n    }\r\n\r\n    @DisplayName(\"특정 선지 보여주기 성공 - GET /admin/choices/{choiceId}\")\r\n    @Test\r\n    public void getChoiceSuccess(){\r\n        String choiceId = choice1.getId().toString();\r\n        ResponseEntity<ChoiceDto> response = restTemplate.getForEntity(URL + \"/admin/choices/\" + choiceId, ChoiceDto.class);\r\n\r\n        assertThat(response.getStatusCode()).isEqualTo(HttpStatus.OK);\r\n        assertThat(response.getBody().getContent()).isEqualTo(\"choice1\");\r\n        assertThat(response.getBody().getTopic()).isEqualTo(\"topic1\");\r\n    }\r\n\r\n    @DisplayName(\"존재하지 않는 선지 조회 요청시 - GET /admin/choices/{choiceId}\")\r\n    @Test\r\n    public void getChoiceFail() {\r\n        ResponseEntity<ChoiceDto> response = restTemplate.getForEntity(URL + \"/admin/choices/3333333\" , ChoiceDto.class);\r\n        assertThat(response.getStatusCode()).isEqualTo(HttpStatus.NOT_FOUND);\r\n    }\r\n\r\n    @DisplayName(\"3개의 선지 추가 성공 - POST /admin/choices\")\r\n    @Test\r\n    public void add3ChoiceSuccess() {\r\n        String title = topic1.getTitle();\r\n        String[] contentList = {\"ac1\", \"ac2\", \"ac3\"};\r\n\r\n        ChoiceAddDto dto = new ChoiceAddDto(title, contentList);\r\n\r\n        ResponseEntity<Void> response = restTemplate.postForEntity(URL + \"/admin/choices/\", dto, Void.class);\r\n\r\n        assertThat(response.getStatusCode()).isEqualTo(HttpStatus.CREATED);\r\n\r\n        List<Choice> choiceList = choiceRepository.queryChoiceByTopicTitle(title);\r\n        assertThat(choiceList.size()).isEqualTo(6); // 기존 3개 + 추가한 3개\r\n        Set<String> choiceSet = choiceList.stream().map(c -> c.getContent()).collect(Collectors.toSet());\r\n\r\n        assertThat(choiceSet.contains(\"ac1\")).isTrue();\r\n        assertThat(choiceSet.contains(\"ac2\")).isTrue();\r\n        assertThat(choiceSet.contains(\"ac3\")).isTrue();\r\n    }\r\n\r\n    @DisplayName(\"잘못된 입력으로 인한 선지 추가 실패 - POST /admin/choices\")\r\n    @Test\r\n    public void addChoicesFail(){\r\n        String title = topic1.getTitle();\r\n        String[] contentList = {\"ac1\", \"ac2\", \"ac3\"};\r\n\r\n        ChoiceAddDto wrongDto1 = new ChoiceAddDto(\"\", contentList);\r\n        ChoiceAddDto wrongDto2 = new ChoiceAddDto(\"title\",null);\r\n        ChoiceAddDto wrongDto3 = new ChoiceAddDto(\"wrongTopicTitle\",contentList);\r\n\r\n        ResponseEntity<List<ErrorDto>> response1 = restTemplate.exchange(URL + \"/admin/choices/\", HttpMethod.POST, new HttpEntity<>(wrongDto1), new ParameterizedTypeReference<List<ErrorDto>>() {});\r\n        ResponseEntity<List<ErrorDto>> response2 =restTemplate.exchange(URL + \"/admin/choices/\", HttpMethod.POST, new HttpEntity<>(wrongDto2), new ParameterizedTypeReference<List<ErrorDto>>() {});\r\n        ResponseEntity<List<ErrorDto>> response3 =restTemplate.exchange(URL + \"/admin/choices/\", HttpMethod.POST, new HttpEntity<>(wrongDto3), new ParameterizedTypeReference<List<ErrorDto>>() {});\r\n\r\n        assertThat(response1.getStatusCode()).isEqualTo(HttpStatus.BAD_REQUEST);\r\n        assertThat(response2.getStatusCode()).isEqualTo(HttpStatus.BAD_REQUEST);\r\n        assertThat(response3.getStatusCode()).isEqualTo(HttpStatus.BAD_REQUEST);\r\n\r\n        assertThat(response1.getBody().get(0)).isEqualTo(new ErrorDto(\"topicTitle\", \"토픽제목을 입력해주세요.\"));\r\n        assertThat(response2.getBody().get(0)).isEqualTo(new ErrorDto(\"choiceArr\", \"하나이상의 선지를 입력해주세요.\"));\r\n        assertThat(response3.getBody().get(0)).isEqualTo(new ErrorDto(\"topicTitle\", \"정확한 토픽제목을 입력해주세요\"));\r\n\r\n        List<Choice> choiceList = choiceRepository.queryChoiceByTopicTitle(title);\r\n        assertThat(choiceList.size()).isEqualTo(3); // 기존의 3개 (추가되지 않음)\r\n    }\r\n\r\n    @DisplayName(\"여러개의 선지 변경 성공 - PATCH /admin/choices\")\r\n    @Test\r\n    public void updateChoicesSuccess(){\r\n        ChoiceContentIdDto dto1 = new ChoiceContentIdDto(\"afterChoice1\", choice1.getId());\r\n        ChoiceContentIdDto dto2 = new ChoiceContentIdDto(\"afterChoice2\", choice2.getId());\r\n        ChoiceContentIdDto dto3 = new ChoiceContentIdDto(\"afterChoice3\", choice3.getId());\r\n\r\n        List<ChoiceContentIdDto> dtoList = Arrays.asList(dto1, dto2, dto3);\r\n        ChoiceUpdateDto choiceUpdateDto = new ChoiceUpdateDto(dtoList);\r\n\r\n        ResponseEntity<Void> response = restTemplate.exchange(URL + \"/admin/choices/\", HttpMethod.PATCH, new HttpEntity<>(choiceUpdateDto), Void.class);\r\n\r\n        List<Choice> choiceList = choiceRepository.queryChoiceByTopicTitle(topic1.getTitle());\r\n        Set<String> contentSet = choiceList.stream().map(c -> c.getContent()).collect(Collectors.toSet());\r\n\r\n        assertThat(response.getStatusCode()).isEqualTo(HttpStatus.OK);\r\n\r\n        assertThat(contentSet.contains(\"choice1\")).isFalse();\r\n        assertThat(contentSet.contains(\"choice2\")).isFalse();\r\n        assertThat(contentSet.contains(\"choice3\")).isFalse();\r\n\r\n        assertThat(contentSet.contains(\"afterChoice1\")).isTrue();\r\n        assertThat(contentSet.contains(\"afterChoice2\")).isTrue();\r\n        assertThat(contentSet.contains(\"afterChoice3\")).isTrue();\r\n    }\r\n\r\n    @DisplayName(\"여러개의 선지 변경 실패 - PATCH /admin/choices\")\r\n    @Test\r\n    public void updateChoicesFail(){\r\n        ChoiceContentIdDto dto = new ChoiceContentIdDto(\"afterChoice1\", 333333L);\r\n        List<ChoiceContentIdDto> wrongDtoList = Arrays.asList(dto);\r\n\r\n        ChoiceUpdateDto wrongDto1 = new ChoiceUpdateDto(new ArrayList<>());\r\n        ChoiceUpdateDto wrongDto2 = new ChoiceUpdateDto(wrongDtoList);\r\n\r\n        ResponseEntity<List<ErrorDto>> response1 = restTemplate.exchange(URL + \"/admin/choices/\", HttpMethod.PATCH, new HttpEntity<>(wrongDto1), new ParameterizedTypeReference<List<ErrorDto>>() {});\r\n        ResponseEntity<Void> response2 = restTemplate.exchange(URL + \"/admin/choices/\", HttpMethod.PATCH, new HttpEntity<>(wrongDto2), Void.class);\r\n\r\n        List<Choice> choiceList = choiceRepository.queryChoiceByTopicTitle(topic1.getTitle());\r\n        Set<String> contentSet = choiceList.stream().map(c -> c.getContent()).collect(Collectors.toSet());\r\n\r\n        assertThat(response1.getStatusCode()).isEqualTo(HttpStatus.BAD_REQUEST);\r\n        assertThat(response1.getBody().get(0)).isEqualTo(new ErrorDto(\"choiceList\", \"하나 이상의 선지를 입력해주세요.\"));\r\n\r\n        assertThat(response2.getStatusCode()).isEqualTo(HttpStatus.NOT_FOUND);\r\n\r\n        assertThat(contentSet.contains(\"afterChoice1\")).isFalse();\r\n    }\r\n\r\n    @DisplayName(\"여러개의 선지 삭제 - DELETE /admin/choices\")\r\n    @Test\r\n    public void deleteChoicesSuccess(){\r\n        List<Long> idList = Arrays.asList(choice4.getId(), choice5.getId());\r\n\r\n        ResponseEntity<Void> response = restTemplate.exchange(URL + \"/admin/choices/\", HttpMethod.DELETE, new HttpEntity<>(idList), Void.class);\r\n\r\n        List<Choice> choiceList = choiceRepository.queryChoiceByTopicTitle(topic2.getTitle());\r\n\r\n        assertThat(response.getStatusCode()).isEqualTo(HttpStatus.OK);\r\n        assertThat(choiceList.size()).isEqualTo(0);\r\n    }\r\n\r\n    @DisplayName(\"존재하지 않는 선지 삭제 요청 - DELETE /admin/choices\")\r\n    @Test\r\n    public void deleteChoicesFail(){\r\n        List<Long> idList = Arrays.asList(333333L, 44444444L);\r\n\r\n        ResponseEntity<Void> response = restTemplate.exchange(URL + \"/admin/choices/\", HttpMethod.DELETE, new HttpEntity<>(idList), Void.class);\r\n\r\n        List<Choice> choiceList = choiceRepository.queryChoiceByTopicTitle(topic2.getTitle());\r\n\r\n        assertThat(response.getStatusCode()).isEqualTo(HttpStatus.NOT_FOUND);\r\n        assertThat(choiceList.size()).isEqualTo(2);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Project/OpenBook/Controller/ChoiceControllerTest.java b/src/test/java/Project/OpenBook/Controller/ChoiceControllerTest.java
--- a/src/test/java/Project/OpenBook/Controller/ChoiceControllerTest.java	
+++ b/src/test/java/Project/OpenBook/Controller/ChoiceControllerTest.java	
@@ -185,53 +185,29 @@
         assertThat(choiceList.size()).isEqualTo(3); // 기존의 3개 (추가되지 않음)
     }
 
-    @DisplayName("여러개의 선지 변경 성공 - PATCH /admin/choices")
+    @DisplayName("선지 수정 성공 - PATCH /admin/choices/{choiceId}")
     @Test
     public void updateChoicesSuccess(){
-        ChoiceContentIdDto dto1 = new ChoiceContentIdDto("afterChoice1", choice1.getId());
-        ChoiceContentIdDto dto2 = new ChoiceContentIdDto("afterChoice2", choice2.getId());
-        ChoiceContentIdDto dto3 = new ChoiceContentIdDto("afterChoice3", choice3.getId());
-
-        List<ChoiceContentIdDto> dtoList = Arrays.asList(dto1, dto2, dto3);
-        ChoiceUpdateDto choiceUpdateDto = new ChoiceUpdateDto(dtoList);
+        String afterContent = "after fix content";
+        ChoiceUpdateDto choiceUpdateDto = new ChoiceUpdateDto("topic2", afterContent);
 
-        ResponseEntity<Void> response = restTemplate.exchange(URL + "/admin/choices/", HttpMethod.PATCH, new HttpEntity<>(choiceUpdateDto), Void.class);
-
-        List<Choice> choiceList = choiceRepository.queryChoiceByTopicTitle(topic1.getTitle());
-        Set<String> contentSet = choiceList.stream().map(c -> c.getContent()).collect(Collectors.toSet());
+        ResponseEntity<Void> response = restTemplate.exchange(URL + "/admin/choices/" + choice4.getId(), HttpMethod.PATCH, new HttpEntity<>(choiceUpdateDto), Void.class);
 
         assertThat(response.getStatusCode()).isEqualTo(HttpStatus.OK);
 
-        assertThat(contentSet.contains("choice1")).isFalse();
-        assertThat(contentSet.contains("choice2")).isFalse();
-        assertThat(contentSet.contains("choice3")).isFalse();
+        Optional<Choice> choiceOptional = choiceRepository.findById(choice4.getId());
+        if (choiceOptional.isEmpty()) {
+            throw new RuntimeException("존재하지 않는 선지");
+        }
+        Choice updatedChoice = choiceOptional.get();
 
-        assertThat(contentSet.contains("afterChoice1")).isTrue();
-        assertThat(contentSet.contains("afterChoice2")).isTrue();
-        assertThat(contentSet.contains("afterChoice3")).isTrue();
+        assertThat(updatedChoice.getContent()).isEqualTo(afterContent);
     }
 
-    @DisplayName("여러개의 선지 변경 실패 - PATCH /admin/choices")
+    @DisplayName("선지 수정 실패 - PATCH /admin/choices/{choiceId}")
     @Test
     public void updateChoicesFail(){
-        ChoiceContentIdDto dto = new ChoiceContentIdDto("afterChoice1", 333333L);
-        List<ChoiceContentIdDto> wrongDtoList = Arrays.asList(dto);
-
-        ChoiceUpdateDto wrongDto1 = new ChoiceUpdateDto(new ArrayList<>());
-        ChoiceUpdateDto wrongDto2 = new ChoiceUpdateDto(wrongDtoList);
 
-        ResponseEntity<List<ErrorDto>> response1 = restTemplate.exchange(URL + "/admin/choices/", HttpMethod.PATCH, new HttpEntity<>(wrongDto1), new ParameterizedTypeReference<List<ErrorDto>>() {});
-        ResponseEntity<Void> response2 = restTemplate.exchange(URL + "/admin/choices/", HttpMethod.PATCH, new HttpEntity<>(wrongDto2), Void.class);
-
-        List<Choice> choiceList = choiceRepository.queryChoiceByTopicTitle(topic1.getTitle());
-        Set<String> contentSet = choiceList.stream().map(c -> c.getContent()).collect(Collectors.toSet());
-
-        assertThat(response1.getStatusCode()).isEqualTo(HttpStatus.BAD_REQUEST);
-        assertThat(response1.getBody().get(0)).isEqualTo(new ErrorDto("choiceList", "하나 이상의 선지를 입력해주세요."));
-
-        assertThat(response2.getStatusCode()).isEqualTo(HttpStatus.NOT_FOUND);
-
-        assertThat(contentSet.contains("afterChoice1")).isFalse();
     }
 
     @DisplayName("여러개의 선지 삭제 - DELETE /admin/choices")
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"83978279-1277-402e-960c-62db35564810\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/classes/Project/OpenBook/Config/SecurityConfig.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/classes/Project/OpenBook/Config/SecurityConfig.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Project/OpenBook/Config/SecurityConfig.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Project/OpenBook/Config/SecurityConfig.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Project/OpenBook/Controller/ChoiceController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Project/OpenBook/Controller/ChoiceController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Project/OpenBook/Domain/Choice.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Project/OpenBook/Domain/Choice.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Project/OpenBook/Dto/ChoiceUpdateDto.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Project/OpenBook/Dto/ChoiceUpdateDto.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Project/OpenBook/Service/ChoiceService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Project/OpenBook/Service/ChoiceService.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$\">\r\n          <activation />\r\n        </task>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"OpenBook\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"OpenBook\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"OpenBook\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\r\n                <item name=\"other\" type=\"c8890929:TasksNode$1\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"OpenBook\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\r\n                <item name=\"querydsl\" type=\"c8890929:TasksNode$1\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JUnit5 Test Class\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"JpbToolWindowState\">\r\n    <option name=\"myId2FirstActivated\">\r\n      <map>\r\n        <entry key=\"com.haulmont.jpb.jpaInspector\" value=\"true\" />\r\n        <entry key=\"com.haulmont.jpb.jpaPalette\" value=\"true\" />\r\n        <entry key=\"com.haulmont.jpb.jpaStructure\" value=\"true\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"myId2Visible\">\r\n      <map>\r\n        <entry key=\"com.haulmont.jpb.jpaInspector\" value=\"false\" />\r\n        <entry key=\"com.haulmont.jpb.jpaPalette\" value=\"false\" />\r\n        <entry key=\"com.haulmont.jpb.jpaStructure\" value=\"false\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2Otwwp1zLVX8s8NI2STj6Gyesx6\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,\r\n    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,\r\n    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,\r\n    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.17&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;spring.configuration.checksum&quot;: &quot;ade4cdcfb04de422f03ad8eaf4736d9e&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"Project.OpenBook.Controller\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Spring Boot.OpenBookApplication\">\r\n    <configuration name=\"AdminControllerTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"OpenBook.test\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Project.OpenBook.Controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"Project.OpenBook.Controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Project.OpenBook.Controller.AdminControllerTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"All in OpenBook.test (2)\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"OpenBook.test\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"package\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"All in OpenBook.test (3)\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"OpenBook.test\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"package\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Controller in OpenBook.test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"OpenBook.test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"directory\" />\r\n      <dir value=\"$PROJECT_DIR$/src/test/java/Project/OpenBook/Controller\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"OpenBookApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"OpenBook.main\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"Project.OpenBook.OpenBookApplication\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Project.OpenBook.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Spring Boot.OpenBookApplication\" />\r\n        <item itemvalue=\"JUnit.All in OpenBook.test (3)\" />\r\n        <item itemvalue=\"JUnit.All in OpenBook.test (2)\" />\r\n        <item itemvalue=\"JUnit.Controller in OpenBook.test\" />\r\n        <item itemvalue=\"JUnit.AdminControllerTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"83978279-1277-402e-960c-62db35564810\" name=\"Changes\" comment=\"\" />\r\n      <created>1682001110955</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1682001110955</updated>\r\n      <workItem from=\"1682001112766\" duration=\"9669000\" />\r\n      <workItem from=\"1682393431413\" duration=\"9996000\" />\r\n      <workItem from=\"1682413001320\" duration=\"13486000\" />\r\n      <workItem from=\"1682484600421\" duration=\"4523000\" />\r\n      <workItem from=\"1682574370075\" duration=\"1187000\" />\r\n      <workItem from=\"1682689140898\" duration=\"3334000\" />\r\n      <workItem from=\"1682834924198\" duration=\"1465000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/test/java/Project/OpenBook/Controller/ChapterControllerTest.java</url>\r\n          <line>193</line>\r\n          <option name=\"timeStamp\" value=\"12\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Project/OpenBook/Controller/TopicController.java</url>\r\n          <line>32</line>\r\n          <option name=\"timeStamp\" value=\"13\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Project/OpenBook/Service/QuestionService.java</url>\r\n          <line>118</line>\r\n          <option name=\"timeStamp\" value=\"17\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Project/OpenBook/Service/QuestionService.java</url>\r\n          <line>181</line>\r\n          <option name=\"timeStamp\" value=\"18\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Project/OpenBook/Service/DescriptionService.java</url>\r\n          <line>39</line>\r\n          <option name=\"timeStamp\" value=\"19\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Project/OpenBook/Controller/DescriptionController.java</url>\r\n          <line>52</line>\r\n          <option name=\"timeStamp\" value=\"20\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <watches-manager>\r\n      <configuration name=\"JUnit\">\r\n        <watch expression=\"choiceIdList\" />\r\n        <watch expression=\"choiceIdList\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,13 +5,9 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="83978279-1277-402e-960c-62db35564810" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/classes/Project/OpenBook/Config/SecurityConfig.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/classes/Project/OpenBook/Config/SecurityConfig.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Project/OpenBook/Config/SecurityConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Project/OpenBook/Config/SecurityConfig.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Project/OpenBook/Controller/ChoiceController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Project/OpenBook/Controller/ChoiceController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Project/OpenBook/Domain/Choice.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Project/OpenBook/Domain/Choice.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Project/OpenBook/Dto/ChoiceUpdateDto.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Project/OpenBook/Dto/ChoiceUpdateDto.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Project/OpenBook/Service/ChoiceService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Project/OpenBook/Service/ChoiceService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/Project/OpenBook/Controller/ChoiceControllerTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/Project/OpenBook/Controller/ChoiceControllerTest.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -124,22 +120,15 @@
     </key>
   </component>
   <component name="RunManager" selected="Spring Boot.OpenBookApplication">
-    <configuration name="AdminControllerTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="All in OpenBook.test (2)" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="OpenBook.test" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="Project.OpenBook.Controller.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <option name="PACKAGE_NAME" value="Project.OpenBook.Controller" />
-      <option name="MAIN_CLASS_NAME" value="Project.OpenBook.Controller.AdminControllerTest" />
-      <option name="TEST_OBJECT" value="class" />
+      <option name="PACKAGE_NAME" value="" />
+      <option name="TEST_OBJECT" value="package" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="All in OpenBook.test (2)" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="All in OpenBook.test (3)" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="OpenBook.test" />
       <option name="PACKAGE_NAME" value="" />
       <option name="TEST_OBJECT" value="package" />
@@ -147,7 +136,7 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="All in OpenBook.test (3)" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="All in OpenBook.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="OpenBook.test" />
       <option name="PACKAGE_NAME" value="" />
       <option name="TEST_OBJECT" value="package" />
@@ -155,10 +144,18 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="Controller in OpenBook.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="ChoiceControllerTest.updateChoicesSuccess" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="OpenBook.test" />
-      <option name="TEST_OBJECT" value="directory" />
-      <dir value="$PROJECT_DIR$/src/test/java/Project/OpenBook/Controller" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="Project.OpenBook.Controller.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="Project.OpenBook.Controller" />
+      <option name="MAIN_CLASS_NAME" value="Project.OpenBook.Controller.ChoiceControllerTest" />
+      <option name="METHOD_NAME" value="updateChoicesSuccess" />
+      <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -179,10 +176,10 @@
     <recent_temporary>
       <list>
         <item itemvalue="Spring Boot.OpenBookApplication" />
+        <item itemvalue="JUnit.ChoiceControllerTest.updateChoicesSuccess" />
+        <item itemvalue="JUnit.All in OpenBook.test" />
         <item itemvalue="JUnit.All in OpenBook.test (3)" />
         <item itemvalue="JUnit.All in OpenBook.test (2)" />
-        <item itemvalue="JUnit.Controller in OpenBook.test" />
-        <item itemvalue="JUnit.AdminControllerTest" />
       </list>
     </recent_temporary>
   </component>
@@ -201,6 +198,8 @@
       <workItem from="1682574370075" duration="1187000" />
       <workItem from="1682689140898" duration="3334000" />
       <workItem from="1682834924198" duration="1465000" />
+      <workItem from="1682842261708" duration="1125000" />
+      <workItem from="1683072882993" duration="84000" />
     </task>
     <servers />
   </component>
